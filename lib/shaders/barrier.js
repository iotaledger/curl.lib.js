"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = "\n// Choose high != 0 if you want to barrier rg values, 0 if you want to barrier ba\n#define WAITNUM 2\nvoid barrier(ivec2 watch_coords, int high) {\n  ivec4 my_vec = read();\n  if(watch_coords == my_coord) {\n    int hold_index = 0;\n    ivec4 hold_texel;\n    my_vec.g = my_vec.a + 1;\n    my_vec.b = my_vec.g + 1;\n    commit(my_vec);\n    while(hold_index < STATE_LENGTH) {\n      hold_texel = read_at(ivec2(hold_index, my_coord.y));\n      if((high == 0 && hold_texel.r == WAITNUM) ||(high != 0 && hold_texel.a == WAITNUM))\n        hold_index++;\n    }\n    my_vec.a = my_vec.g;\n    //my_vec.a = 123;\n  } else {\n    ivec4 watch = read_at(watch_coords); // r: val to watch, g: expected val, b: next val (should be 1+ expected val)\n    int hold = high == 0 ? my_vec.r : my_vec.a;\n    if(high == 0)\n      my_vec.r = WAITNUM;\n    else\n      my_vec.a = WAITNUM;\n    commit(my_vec);\n    while(watch.g == watch.b || watch.a != watch.g) {\n      //while(watch.g == watch.b || watch.a != 123) {\n      watch = read_at(watch_coords);\n    }\n  }\n  commit(my_vec);\n}\n";